name: Publish to npm

on:
  push:
    tags:
      - "v*" # napÅ™. v1.0.0

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Show package info
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "TypeScript version: $(npx tsc --version)"
          npm list --depth=0

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Check if version exists on npm
        id: npm_version_check
        run: |
          HTTP_STATUS=$(curl -s -o /dev/null -w "%{http_code}" https://registry.npmjs.org/firestore-helper-ts/${{ steps.extract_version.outputs.VERSION }})
          if [ "$HTTP_STATUS" == "200" ]; then
            echo "EXISTS=true" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.extract_version.outputs.VERSION }} already exists on npm registry."
          else
            echo "EXISTS=false" >> $GITHUB_OUTPUT
            echo "Version ${{ steps.extract_version.outputs.VERSION }} does not exist yet."
          fi

      - name: Update package version
        if: steps.npm_version_check.outputs.EXISTS == 'false'
        run: npm version ${{ steps.extract_version.outputs.VERSION }} --no-git-tag-version

      - name: Publish to npm
        if: steps.npm_version_check.outputs.EXISTS == 'false'
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Skip npm publish for existing version
        if: steps.npm_version_check.outputs.EXISTS == 'true'
        run: |
          echo "Skipping npm publish because version ${{ steps.extract_version.outputs.VERSION }} already exists."
          echo "Consider creating a new tag with a different version number."

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.extract_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
