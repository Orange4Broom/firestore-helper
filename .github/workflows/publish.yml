name: Publish to npm

on:
  push:
    tags:
      - "v*" # např. v1.0.0

jobs:
  publish:
    name: Publish to npm
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: "18.x"
          registry-url: "https://registry.npmjs.org"

      - name: Install dependencies
        run: npm ci

      - name: Show package info
        run: |
          echo "Node version: $(node -v)"
          echo "NPM version: $(npm -v)"
          echo "TypeScript version: $(npx tsc --version)"
          npm list --depth=0

      - name: Test
        run: npm test

      - name: Build
        run: npm run build

      - name: Generate documentation
        run: |
          # Použit balíčky z package.json místo globální instalace
          # Zkontrolovat, jestli jsou balíčky již v devDependencies
          if ! npm list typedoc --json | grep -q "typedoc"; then
            npm install --save-dev typedoc@0.25.12
          fi
          if ! npm list typedoc-plugin-markdown --json | grep -q "typedoc-plugin-markdown"; then
            npm install --save-dev typedoc-plugin-markdown@3.17.1
          fi
          npm run docs

      - name: Extract version from tag
        id: extract_version
        run: echo "VERSION=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT

      - name: Update package version
        run: npm version ${{ steps.extract_version.outputs.VERSION }} --no-git-tag-version

      - name: Publish to npm
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create GitHub Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.extract_version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
